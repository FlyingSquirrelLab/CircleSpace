plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.jsoup:jsoup:1.18.1'
	implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.16.1'
	implementation group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '4.16.1'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'

	implementation 'com.google.code.gson:gson:2.10.1'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	implementation 'net.nurigo:sdk:4.3.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

//def webappDir = "$projectDir/src/frontend"
//
//def npmPath = System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('mac') ? "/usr/local/bin/npm" : "/usr/bin/npm"
//
//sourceSets {
//	main {
//		resources {
//			srcDirs = ["$webappDir/build", "$projectDir/src/main/resources"]
//		}
//	}}
//
//processResources {
//	dependsOn "copyWebApp"
//}
//
//task copyWebApp(type: Copy) {
//	dependsOn "buildReact"
//	from "$webappDir/dist"
//	into "$projectDir/src/main/resources/static"
//}
//
//task buildReact(type: Exec) {
//	dependsOn "installReact"
//	workingDir "$webappDir"
//	inputs.dir "$webappDir"
//	group = BasePlugin.BUILD_GROUP
//	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//		commandLine "npm.cmd", "run", "build"
//	} else {
//		commandLine npmPath, "run", "build"
//	}
//}
//
//task installReact(type: Exec) {
//	workingDir "$webappDir"
//	inputs.dir "$webappDir"
//	group = BasePlugin.BUILD_GROUP
//	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//		commandLine "npm.cmd", "audit", "fix"
//		commandLine "npm.cmd", "install"
//	} else {
//		commandLine npmPath, "audit", "fix"
//		commandLine npmPath, "install"
//	}
//}
